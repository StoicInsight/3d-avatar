/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 public/models/myModel.glb
*/
'use client'
import React, { useEffect, useRef } from 'react'
import { useFrame } from '@react-three/fiber'
import { useAnimations, useFBX, useGLTF } from "@react-three/drei";
import { useControls } from "leva";
import * as THREE from "three";

export function Avatar(props) {
  const group = useRef()

  const { nodes, materials } = useGLTF('models/myModel.glb')

  const { animations: typingAnimation } = useFBX('animations/Typing.fbx')

  typingAnimation[0].name = 'Typing'

  const {actions} = useAnimations(typingAnimation, group)

  useFrame(() => {
    // group.current.getObjectByName("Neck").lookAt(camera.position)
  })

  useEffect(() => {
    actions['Typing'].reset().play()
  }, [])


  return (
    <group {...props} ref={group} dispose={null}>
      <group rotation-x={-Math.PI / 2}>
        <primitive object={nodes.Hips} />
        <skinnedMesh name="Wolf3D_Avatar" geometry={nodes.Wolf3D_Avatar.geometry} material={materials.Wolf3D_Avatar} skeleton={nodes.Wolf3D_Avatar.skeleton} morphTargetDictionary={nodes.Wolf3D_Avatar.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Avatar.morphTargetInfluences} />
      </group>
    </group>

  )
}

useGLTF.preload('models/myModel.glb')
